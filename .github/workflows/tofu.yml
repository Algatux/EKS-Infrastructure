name: Tofu Apply Workflow

on:
  workflow_call:
    inputs:
      tfvar_path:
        type: string
        description: 'Path to the cluster `tfvar` file'
        required: true
      ref_name:
        type: string
        description: 'Reference name'
        required: true

jobs:
  aws-login:
    runs-on: ubuntu-latest
    environment: deploy
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE }}
          aws-region: us-east-1

      - name: Verify authentication
        run: aws sts get-caller-identity

  tofu-plan:
    runs-on: ubuntu-latest
    environment: deploy
    needs: aws-login
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: 1.9.0

      - name: Initialize OpenTofu
        run: tofu init -var-file ${{ github.workspace }}/${{ inputs.tfvar_path }} -var 'tfstate_name=${{ inputs.ref_name }}.tfstate'

      - name: Validate OpenTofu
        run: tofu validate -var-file ${{ github.workspace }}/${{ inputs.tfvar_path }} -var 'tfstate_name=${{ inputs.ref_name }}.tfstate'

      - name: Run OpenTofu Plan
        run: tofu plan -var-file ${{ github.workspace }}/${{ inputs.tfvar_path }} -var 'tfstate_name=${{ inputs.ref_name }}.tfstate' -out=${{ inputs.ref_name }}.tfplan

      - name: Upload planf for ${{ inputs.ref_name }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.ref_name }}_plan
          path: ${{ inputs.ref_name }}.tfplan

  tofu-apply:
    needs: tofu-plan
    runs-on: ubuntu-latest
    environment: deploy
    steps:
      - name: Upload planf for ${{ inputs.ref_name }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.ref_name }}_plan

      - name: Apply OpenTofu Plan
        run: tofu apply -auto-approve ${{ inputs.ref_name }}.tfplan
